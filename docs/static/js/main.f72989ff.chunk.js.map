{"version":3,"sources":["Reversi/Board/index.js","Reversi/InfoPanel/index.js","Reversi/actions.js","Reversi/index.js","index.js","Main/index.js"],"names":["BoardTile","props","token","value","className","src","onClick","onTileClicked","x","y","Board","rows","columns","push","key","this","boardTiles","class_name","currentPlayer","skipTurn","Component","InfoPanel","white_player_class","black_player_class","target","href","height","width","cx","cy","r","stroke","strokeWidth","fill","whiteScore","blackScore","logs","text","i","length","showLogs","newGame","validateCaptureChain","board_tiles","player","capture_count","flip_opposing_tiles","console","log","captureDirection","startX","dirX","startY","dirY","captureNorth","targetX","targetY","captureSouth","captureWest","captureEast","captureNorthEast","captureNorthWest","captureSouthEast","captureSouthWest","self","captureTile","total","north","south","east","west","northeast","northwest","southeast","southwest","createNewBoard","new_board","Array","FRESH_STATE","turn","white_score","black_score","Reversi","state","captured","Actions","setState","new_state","addLog","message","id","onNewGame","onSkipTurn","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.f72989ff.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\n\r\nfunction BoardTile(props) {\r\n    let token;\r\n    if (props.value) {\r\n        let fill_color\r\n        if (props.value === 1) {\r\n            token = <img className=\"disc\" src=\"/images/disc-white.svg\" />\r\n        } else {\r\n            token = <img className=\"disc\" src=\"/images/disc-black.svg\" />\r\n        }\r\n    }\r\n\r\n    return (\r\n        <td className=\"game-board-tile\"\r\n                onClick={() => {\r\n                    props.onTileClicked(props.x, props.y)\r\n                }}>\r\n            { token }\r\n        </td>\r\n    )\r\n}\r\n\r\nexport default class Board extends Component {\r\n    render() {\r\n        let rows = []\r\n        for (let y = 0; y < 8; y++) {\r\n            let columns = []\r\n            for (let x = 0; x < 8; x++){\r\n                columns.push(\r\n                    <BoardTile key={'tile_' + x + '_' + y} x={x} y={y} value={this.props.boardTiles[x][y]}\r\n                       onTileClicked={this.props.onTileClicked} />\r\n                   )\r\n            }\r\n            rows.push(<tr key={'row_' + y}>{columns}</tr>)\r\n        }\r\n\r\n        let class_name = 'othello-board'\r\n        if (this.props.currentPlayer === 1) {\r\n            class_name += ' white-turn'\r\n        } else if (this.props.currentPlayer === -1) {\r\n            class_name += ' black-turn'\r\n        }\r\n\r\n        return (\r\n            <div className=\"game-area\">\r\n                <table className={class_name}>\r\n                    <tbody>\r\n                    { rows }\r\n                    </tbody>\r\n                </table>\r\n                <div>\r\n                    <button onClick={this.props.skipTurn}>Skip turn</button>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React, {Component} from 'react'\r\n\r\nfunction showActivePlayer(currentPlayer) {\r\n    if (currentPlayer === 1) {\r\n        return \"White\"\r\n    } else {\r\n        return \"Black\"\r\n    }\r\n}\r\n\r\nfunction showLogs(logs) {\r\n    let text = ''\r\n    const start_index = logs.length>= 10? logs.length -10: 0\r\n    for (let i = start_index; i< logs.length; i++) {\r\n        text += logs[i] + '\\n'\r\n    }\r\n    return <textarea className=\"logs-list\" value={text}/>\r\n}\r\n\r\nexport default class InfoPanel extends Component {\r\n    render () {\r\n        let white_player_class = 'player-bar', black_player_class = 'player-bar'\r\n        if (this.props.currentPlayer === 1) {\r\n            white_player_class += ' current-player'\r\n        } else if (this.props.currentPlayer === -1) {\r\n            black_player_class += ' current-player'\r\n        }\r\n        return (\r\n            <div className=\"info-panel\">\r\n                <div>\r\n                    <h2>REVERSI</h2>\r\n                    <p>the goal is to capture as many areas as possible. For the full instructions, please see <a target=\"new\" href=\"https://en.wikipedia.org/wiki/Reversi\">the Wikipedia guide on Reversi</a></p>\r\n                </div>\r\n                <div className=\"info-panel-status\">It is { showActivePlayer(this.props.currentPlayer)}'s turn</div>\r\n                <div className={white_player_class}>\r\n                    <svg className=\"player-icon\" height=\"13\" width=\"13\">\r\n                        <circle cx=\"6\" cy=\"6\" r=\"6\" stroke=\"black\" strokeWidth=\"1\" fill=\"white\" />\r\n                    </svg>\r\n                    White Player: { this.props.whiteScore }\r\n                </div>\r\n                <div className={black_player_class}>\r\n                    <svg className=\"player-icon\" height=\"13\" width=\"13\">\r\n                        <circle cx=\"6\" cy=\"6\" r=\"6\" stroke=\"black\" strokeWidth=\"1\" fill=\"black\" />\r\n                    </svg>\r\n                    Black Player: { this.props.blackScore }\r\n                </div>\r\n\r\n                {showLogs(this.props.logs)}\r\n                <button onClick={this.props.newGame}>New Game</button>\r\n            </div>\r\n        )\r\n    }\r\n}","\r\nfunction validateCaptureChain(board_tiles, x, y, player, capture_count, flip_opposing_tiles = false) {\r\n    console.log('validating ' + x + ':' + y)\r\n    if (x <0 || x >7 || y < 0 || y > 7) {\r\n        return -1\r\n    }else if (board_tiles[x][y] === player && capture_count > 0) {\r\n        console.log('end' + x + ':' + y)\r\n        return 0 // found the edge so mark for capture completion\r\n    } else if (board_tiles[x][y] === (player * -1)) {\r\n        console.log('occupied by ' + board_tiles[x][y])\r\n        if (flip_opposing_tiles) board_tiles[x][y] = player\r\n        console.log('increment' + x + ':' + y)\r\n        return 1 // increment (actual/potential) captures\r\n    } else {\r\n        console.log('terminate' + x + ':' + y)\r\n        return -1 // nothing to capture so terminate any further search\r\n    }\r\n}\r\n\r\nfunction captureDirection(board_tiles, startX, dirX, startY, dirY, player, flip_opposing_tiles) {\r\n    let capture_count = 0\r\n    let x = startX + dirX\r\n    let y = startY + dirY\r\n    while (true) {\r\n        let action = validateCaptureChain(board_tiles, x, y, player, capture_count, flip_opposing_tiles)\r\n        switch (action) {\r\n            case 1:\r\n                capture_count++\r\n                break\r\n            case 0:\r\n                return capture_count\r\n            default:\r\n                return 0\r\n        }\r\n        x += dirX\r\n        y += dirY\r\n    }\r\n}\r\n\r\nfunction captureNorth(board_tiles, targetX, targetY, player, flip_opposing_tiles) {\r\n    return captureDirection(board_tiles, targetX, 0, targetY, -1, player, flip_opposing_tiles)\r\n}\r\n\r\nfunction captureSouth(board_tiles, targetX, targetY, player, flip_opposing_tiles) {\r\n    return captureDirection(board_tiles, targetX, 0, targetY, 1, player, flip_opposing_tiles)\r\n}\r\n\r\nfunction captureWest(board_tiles, targetX, targetY, player, flip_opposing_tiles) {\r\n    return captureDirection(board_tiles, targetX, -1, targetY, 0, player, flip_opposing_tiles)\r\n}\r\n\r\nfunction captureEast(board_tiles, targetX, targetY, player, flip_opposing_tiles) {\r\n    return captureDirection(board_tiles, targetX, 1, targetY, 0, player, flip_opposing_tiles)\r\n}\r\n\r\nfunction captureNorthEast(board_tiles, targetX, targetY, player, flip_opposing_tiles) {\r\n    return captureDirection(board_tiles, targetX, 1, targetY, -1, player, flip_opposing_tiles)\r\n}\r\n\r\nfunction captureNorthWest(board_tiles, targetX, targetY, player, flip_opposing_tiles) {\r\n    return captureDirection(board_tiles, targetX, -1, targetY, -1, player, flip_opposing_tiles)\r\n}\r\n\r\nfunction captureSouthEast(board_tiles, targetX, targetY, player, flip_opposing_tiles) {\r\n    return captureDirection(board_tiles, targetX, 1, targetY, 1, player, flip_opposing_tiles)\r\n}\r\n\r\nfunction captureSouthWest(board_tiles, targetX, targetY, player, flip_opposing_tiles) {\r\n    return captureDirection(board_tiles, targetX, -1, targetY, 1, player, flip_opposing_tiles)\r\n}\r\n\r\nfunction captureTile(board_tiles, targetX, targetY, player) {\r\n    const capture_count = {\r\n        total: 0,\r\n        north: 0,\r\n        south: 0,\r\n        east: 0,\r\n        west: 0,\r\n        northeast:0,\r\n        northwest:0,\r\n        southeast:0,\r\n        southwest: 0\r\n    }\r\n\r\n    //verify tiles where by counting potential captured tiles\r\n    capture_count.north = captureNorth(board_tiles, targetX, targetY, player)\r\n    capture_count.south = captureSouth(board_tiles, targetX, targetY, player)\r\n    capture_count.east = captureEast(board_tiles, targetX, targetY, player)\r\n    capture_count.west = captureWest(board_tiles, targetX, targetY, player)\r\n    capture_count.northeast = captureNorthEast(board_tiles, targetX, targetY, player)\r\n    capture_count.northwest = captureNorthWest(board_tiles, targetX, targetY, player)\r\n    capture_count.southeast = captureSouthEast(board_tiles, targetX, targetY, player)\r\n    capture_count.southwest = captureSouthWest(board_tiles, targetX, targetY, player)\r\n    capture_count.total = capture_count.north + capture_count.south + capture_count.east + capture_count.west\r\n        + capture_count.northeast + capture_count.northwest + capture_count.southeast + capture_count.southwest\r\n    console.log(capture_count)\r\n    if (capture_count.total >0) {\r\n        // capture marked tiles\r\n        if (capture_count.north > 0) captureNorth(board_tiles, targetX, targetY, player, true)\r\n        if (capture_count.south > 0) captureSouth(board_tiles, targetX, targetY, player, true)\r\n        if (capture_count.east > 0) captureEast(board_tiles, targetX, targetY, player, true)\r\n        if (capture_count.west > 0) captureWest(board_tiles, targetX, targetY, player, true)\r\n        if (capture_count.northeast > 0) captureNorthEast(board_tiles, targetX, targetY, player, true)\r\n        if (capture_count.northwest > 0) captureNorthWest(board_tiles, targetX, targetY, player, true)\r\n        if (capture_count.southeast > 0) captureSouthEast(board_tiles, targetX, targetY, player, true)\r\n        if (capture_count.southwest > 0) captureSouthWest(board_tiles, targetX, targetY, player, true)\r\n    }\r\n\r\n    return capture_count.total\r\n}\r\n\r\nexport default {\r\n    captureTile\r\n}","import React, { Component } from 'react';\r\nimport Board from './Board';\r\nimport InfoPanel from './InfoPanel';\r\nimport Actions from './actions'\r\nimport './index.css'\r\n\r\nlet self;\r\nfunction createNewBoard() {\r\n    const new_board = new Array(8)\r\n    for (let x = 0; x < 8; x++) { //generate the rows per X-axis\r\n        new_board[x] = new Array(8)\r\n    }\r\n    //set the default starting tiles\r\n    new_board[3][3] = 1\r\n    new_board[4][4] = 1\r\n    new_board[4][3] = -1\r\n    new_board[3][4] = -1\r\n\r\n    return new_board\r\n}\r\n\r\nconst FRESH_STATE = {\r\n    turn: 1,\r\n    white_score : 2,\r\n    black_score : 2,\r\n    board_tiles: createNewBoard(),\r\n    logs: new Array()\r\n}\r\n\r\nexport default class Reversi extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        self = this\r\n        this.state = { ...FRESH_STATE }\r\n        this.state.logs.push(\"Welcome to ALV\\'s Othello demo\")\r\n    }\r\n\r\n    addLog(message) {\r\n        self.setState( state => {\r\n            const new_state = { ...state }\r\n            new_state.logs.push(message);\r\n            return new_state\r\n        } )\r\n    }\r\n\r\n    currentPlayer() {\r\n        return self.state.turn % 2 === 0 ? -1 : 1\r\n    }\r\n\r\n    onNewGame() {\r\n        self.setState( state => {\r\n            const new_state = { ...FRESH_STATE }\r\n            new_state.board_tiles = createNewBoard()\r\n            new_state.logs.push('A new game begins...')\r\n            return new_state\r\n        })\r\n    }\r\n\r\n    onSkipTurn() {\r\n        self.setState( state => {\r\n            const new_state = { ...state }\r\n            new_state.turn++\r\n            if (self.currentPlayer() === 1) {\r\n                self.addLog(self.state.turn + ': White skips their turn');\r\n            } else if (self.currentPlayer() === -1) {\r\n                self.addLog(self.state.turn + ': Black skips their turn');\r\n            }\r\n            return new_state\r\n        })\r\n    }\r\n\r\n    onTileClicked = (x, y) => {\r\n        console.log('user clicked ' + x + ':' + y)\r\n        if (!this.state.board_tiles[x][y]) {\r\n            const captured = Actions.captureTile(self.state.board_tiles, x,y,self.currentPlayer())\r\n            if (captured > 0){\r\n                this.setState( state => {\r\n                    const new_state = { ...state }\r\n                    if (this.currentPlayer() === 1) {\r\n                        new_state.board_tiles[x][y] = 1\r\n                        new_state.white_score += captured + 1\r\n                        new_state.black_score -= captured\r\n                        self.addLog(self.state.turn + ': White occupies ' + x + ':' + y);\r\n                    } else {\r\n                        new_state.board_tiles[x][y] = -1\r\n                        new_state.white_score -= captured\r\n                        new_state.black_score += captured + 1\r\n                        self.addLog(self.state.turn + ': Black occupies ' + x + ':' + y);\r\n                    }\r\n                    new_state.turn += 1\r\n                    return new_state\r\n                })\r\n            } else {\r\n                this.setState( state => {\r\n                    const new_state = { ...state }\r\n                    self.addLog('Invalid Move at ' + x + ':' + y);\r\n                    return new_state\r\n                })\r\n            }\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div id=\"game\">\r\n                <InfoPanel currentPlayer={ this.currentPlayer()} turn={this.state.turn} logs={this.state.logs}\r\n                       whiteScore={this.state.white_score} blackScore={this.state.black_score}\r\n                       newGame = { this.onNewGame } />\r\n                <div id=\"game-board\">\r\n                    <Board boardTiles={this.state.board_tiles} currentPlayer={ this.currentPlayer()}\r\n                           onTileClicked={ this.onTileClicked } skipTurn={this. onSkipTurn} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Main from './Main';\n\nReactDOM.render(<Main />, document.getElementById('root'));\n","import React from 'react'\r\nimport Reversi from './../Reversi';\r\nimport './index.css';\r\n\r\nexport default function () {\r\n    const intro = \"Welcome to my new page! there is not much for now but I plan to start working on my hobbies and share them online. I have always been fascinated by web development since 2000 when the ISP pre-paid cards became famous here. Since then I have tried HTML 4 and CSS but was never a fan of javascript. The only use I found it useful then was putting rainbow trails when you hover on my page or convert emoticons to images on table declarations for my forums. Since then I worked on desktop enterprise projects and kinda abandoned the web technologies until 2014 when NodeJS got my attention as a solid technology for the web. I started playing with NodeJS and Javascript (ES6) and other related web technologies. This site aims to become a repository of all my creations! ~Adonis Lee Villamor\"\r\n    return (\r\n        <div>\r\n            <div id=\"main-page-header\">{intro}</div>\r\n            <div id=\"main-page-body\">\r\n                <Reversi />\r\n            </div>\r\n        </div>\r\n    )\r\n}"],"sourceRoot":""}